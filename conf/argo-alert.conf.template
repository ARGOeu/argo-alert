[feed]
# Feed type for contacts simple / gocdb / argo-web-api
feed_type=argo-web-api

[argo-web-api]
# argo web api endpoint to connect to 
endpoint=https://api.devel.example.foo
# argo web api access token  
access_key=s3cr3tt0ke3n
# verify http requests
verify=False 
# select to honor notifications flag in rules or not 
use_notifications_flag=True 


[gocdb]
# auth_method to be used when contacting gocdb api: basic-auth or cert or apikey
auth_method=cert
# username for basic auth
username=
# password for basic auth
password=
# Path to godcb endpoint
api=https://gocdb-url.example.foo
# Path to ca bundle folder
cabundle=/path/to/cabundle
# Path to host certificate file
hostcert=/path/to/hostcert
# Path to host key file
hostkey=/path/to/hostkey
# Verify https requests
verify=False
# Examine notification flag when selecting contacts
use_notifications_flag=True
# request path for gocdb to retrieve top-level items
top_request=/gocdbpi/public/?method=get_site
# request path for gocdb to retrieve sub-level items
sub_request=/gocdbpi/public/?method=get_service

[simple]
# endpoint for simple feed
endpoint=https://
# format json or csv
format=json

[kafka]
# kafka endpoint
endpoint=localhost:9092
# kafka topic
topic=metrics

[alerta]
# alerta service endpoint
endpoint=http://localhost:8080
# alerta environment
environment=devel
# alerta token
token=s3cr3tt0ke3n
# path to store the generated mail rules
mail-rules=/home/root/alerta-rules-101
# extra emails to be notified
extra-emails=alert01@mail.example.foo,alert02@mail.example.foo
# alert timeout is the time in seconds needed for the alert to be considered stale
alert-timeout = 3600
# group type of the tenant's top level group used in alert generation and mail template
group-type = Group
report = Critical
# generate endpoint notifications based on groups
endpoint-contacts-from-groups = False

[logging]
# loggin level
level = INFO
